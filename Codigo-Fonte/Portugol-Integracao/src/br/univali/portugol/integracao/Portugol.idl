
//=========== Declaração de todas as interfaces para permitir referências circulares ===========//

module br 
{ 
    module univali 
    { 
        module portugol 
        {
            module integracao
            {
                exception Excecao
                {
                    string mensagem;
                };

                module analise
                {
                    interface ResultadoAnalise;
                };

                module asa
                {           
                    interface ArvoreSintaticaAbstrata;
                    interface ArvoreSintaticaAbstrataPrograma;
                    interface No;
                    interface NoBloco;
                    interface NoCadeia;
                    interface NoCaracter;
                    interface NoCaso;
                    interface NoChamadaFuncao;
                    interface NoDeclaracao;
                    interface NoDeclaracaoFuncao;
                    interface NoDeclaracaoMatriz;
                    interface NoDeclaracaoVariavel;
                    interface NoDeclaracaoVetor;
                    interface NoDecremento;
                    interface NoEnquanto;
                    interface NoEscolha;
                    interface NoExpressao;
                    interface NoFacaEnquanto;
                    interface NoIncremento;
                    interface NoInteiro;
                    interface NoLogico;
                    interface NoMatriz;
                    interface NoMenosUnario;
                    interface NoNao;
                    interface NoOperacao;
                    interface NoPara;
                    interface NoDeclaracaoParametro;
                    interface NoPare;
                    interface NoPercorra;
                    interface NoReal;
                    interface NoReferencia;
                    interface NoReferenciaMatriz;
                    interface NoReferenciaVariavel;
                    interface NoReferenciaVetor;
                    interface NoRetorne;
                    interface NoSe;
                    interface NoVetor;
                    interface TrechoCodigoFonte;
                    interface VisitanteASA;
                };

                module execucao
                {
                    interface Entrada;
                    interface ObservadorExecucao;
                    interface ResultadoExecucao;
                    interface Saida;
                };

                module mensagens
                {
                    exception ErroExecucao
                    {
                        string mensagem;
                    };

                    exception AvisoAnalise
                    {
                        string mensagem;                        
                        long linha;
                        long coluna;
                        
                    };

                    exception ErroSintatico
                    {
                        string mensagem;
                        long linha;
                        long coluna;                        
                    };

                    exception ErroSemantico
                    {
                        string mensagem;
                        long linha;
                        long coluna;
                    };
                };

                interface Programa;
                interface Portugol;                
            };
        };
    };
};


//================================= Definições das interfaces =================================//

module br 
{ 
    module univali 
    { 
        module portugol 
        {
            module integracao
            {
                module analise
                {
                    typedef sequence<mensagens::AvisoAnalise> ListaAvisoAnalise;

                    typedef sequence<mensagens::ErroSemantico> ListaErroSemantico;

                    typedef sequence<mensagens::ErroSintatico> ListaErroSintatico;

                    //==========================================================================================//

                    interface ResultadoAnalise
                    {
                        long getNumeroTotalErros();
                        long getNumeroErrosSintaticos();
                        long getNumeroErrosSemanticos();
                        long getNumeroAvisos();
    
                        ListaAvisoAnalise getAvisos();
                        ListaErroSintatico getErrosSintaticos();
                        ListaErroSemantico getErrosSemanticos();
                    };
                };

                //==========================================================================================//

                module asa
                {
                    typedef sequence<NoDeclaracao> ListaNoDeclaracao;

                    typedef sequence<NoBloco> ListaNoBloco;

                    typedef sequence<NoExpressao> ListaNoExpressao;

                    typedef sequence<NoDeclaracaoParametro> ListaNoDeclaracaoParametro;

                    typedef sequence<NoCaso> ListaNoCaso;

                    typedef sequence<any> ValoresVetor;

                    typedef sequence<ValoresVetor> ValoresMatriz;

                    //==========================================================================================//

                    enum TipoDado { INTEIRO , REAL, LOGICO, CADEIA, CARACTER, VAZIO };

                    enum Quantificador { VALOR, VETOR, MATRIZ };
                    
                    enum ModoAcesso { POR_VALOR, POR_REFERENCIA };

                    enum Operacao 
                    { 
                        IGUALDADE, DIFERENCA, ATRIBUICAO, E, OU, MAIOR, MAIOR_IGUAL, MENOR, MENOR_IGUAL,

                        SOMA, SOMA_ACUMULATIVA, SUBTRACAO, SUBTRACAO_ACUMULATIVA, DIVISAO,

                        DIVISAO_ACUMULATIVA, MULTIPLICACAO, MULTIPLICACAO_ACUMULATIVA, MODULO,

                        MODULO_ACUMULATIVO, OPERACAO_INVALIDA
                    };

                    //==========================================================================================//

                    exception ExcecaoVisitaASA 
                    {
                        string mensagem;
                        No no;
                        ArvoreSintaticaAbstrata arvoreSintaticaAbstrata;
                    };

                    //==========================================================================================//

                    interface TrechoCodigoFonte
                    {
                        long getColuna();
                        long getLinha();
                        long getTamanhoTexto();
                    };

                    //==========================================================================================//

                    interface No
                    {
                        any aceitar(in VisitanteASA visitante) raises(ExcecaoVisitaASA);
                    };

                    //==========================================================================================//

                    interface NoBloco : No
                    {
                        
                    };

                    //==========================================================================================//

                    interface NoSe : NoBloco
                    {
                        NoExpressao getCondicao();
                        ListaNoBloco getBlocosFalsos();
                        ListaNoBloco getBlocosVerdadeiros();
                    };

                    //==========================================================================================//

                    interface NoRetorne : NoBloco
                    {
                        NoExpressao getExpressao();
                    };

                    //==========================================================================================//

                    interface NoPercorra : NoBloco
                    {
                        NoExpressao getExpessao();
                        ListaNoBloco getBlocos();
                    };

                    //==========================================================================================//

                    interface NoPare : NoBloco
                    {

                    };

                    //==========================================================================================//

                    interface NoPara : NoBloco
                    {
                        ListaNoBloco getBlocos();
                        NoBloco getInicializacao();
                        NoExpressao getIncremento();
                        NoExpressao getCondicao();
                    };

                    //==========================================================================================//
                    
                    interface NoFacaEnquanto : NoBloco
                    {
                        ListaNoBloco getBlocos();
                        NoExpressao getCondicao();
                    };

                    //==========================================================================================//

                    interface NoEscolha : NoBloco
                    {
                        NoExpressao getExpressao();
                        ListaNoCaso getCasos();
                    };

                    //==========================================================================================//

                    interface NoCaso : NoBloco
                    {
                        ListaNoBloco getBlocos();
                        NoExpressao getExpressao();
                    };

                    //==========================================================================================//

                    interface NoEnquanto : NoBloco
                    {
                        NoExpressao getCondicao();
                        ListaNoBloco getBlocos();
                    };

                    //==========================================================================================//

                    interface NoExpressao : NoBloco
                    {
                        TrechoCodigoFonte getReferenciaCodigo();
                    };

                    //==========================================================================================//

                    interface NoVetor : NoExpressao
                    {
                        ValoresVetor getValores();
                    };

                    //==========================================================================================//

                    interface NoReal : NoExpressao
                    {
                        double getValor();
                    };

                    //==========================================================================================//

                    interface NoOperacao : NoExpressao
                    {
                        Operacao getOperacao();
                        NoExpressao getOperandoEsquerdo();
                        NoExpressao getOperandoDireito();
                        TrechoCodigoFonte getTrechoCodigoFonteOperador();
                    };

                    //==========================================================================================//

                    interface NoNao : NoExpressao
                    {
                        NoExpressao getExpressao();
                    };

                    //==========================================================================================//

                    interface NoMenosUnario : NoExpressao
                    {
                        NoExpressao getExpressao();
                        TrechoCodigoFonte getTrechoCodigoFonteMenos();
                    };

                    //==========================================================================================//

                    interface NoMatriz : NoExpressao
                    {
                        ValoresMatriz getValores();
                    };

                    //==========================================================================================//

                    interface NoLogico : NoExpressao
                    {
                        boolean getValor();
                    };

                    //==========================================================================================//

                    interface NoInteiro : NoExpressao
                    {
                        long getValor();
                    };

                    //==========================================================================================//

                    interface NoIncremento : NoExpressao
                    {
                        NoExpressao getExpressao();
                    };

                    //==========================================================================================//

                    interface NoDecremento : NoExpressao
                    {
                        NoExpressao getExpressao();
                    };

                    //==========================================================================================//

                    interface NoReferencia : NoExpressao
                    {
                        string getNome();
                        TrechoCodigoFonte getTrechoCodigoFonteNome();
                    };

                    //==========================================================================================//

                    interface NoReferenciaVetor : NoReferencia
                    {
                        NoExpressao getIndice();
                    };

                    //==========================================================================================//
                    
                    interface NoReferenciaVariavel : NoReferencia
                    {
                        
                    };

                    //==========================================================================================//

                    interface NoReferenciaMatriz : NoReferencia
                    {
                        NoExpressao getLinha();
                        NoExpressao getColuna();
                    };

                    //==========================================================================================//

                    interface NoChamadaFuncao : NoReferencia
                    {
                        ListaNoExpressao getParametros();
                    };

                    //==========================================================================================//

                    interface NoCadeia : NoExpressao
                    {
                        string getValor();
                    };

                    //==========================================================================================//

                    interface NoCaracter : NoExpressao
                    {
                        char getValor();
                    };

                    //==========================================================================================//

                    interface NoDeclaracao : NoBloco
                    {
                        string getNome();
                        boolean constante();
                        TipoDado getTipoDado();
                        NoExpressao getInicializacao();
                        TrechoCodigoFonte getTrechoCodigoFonteNome();
                        TrechoCodigoFonte getTrechoCodigoFonteTipoDado();
                    };

                    //==========================================================================================//

                    interface NoDeclaracaoVetor : NoDeclaracao
                    {
                        NoExpressao getTamanho();
                    };

                    //==========================================================================================//

                    interface NoDeclaracaoVariavel : NoDeclaracao
                    {
                        
                    };

                    //==========================================================================================//

                    interface NoDeclaracaoMatriz : NoDeclaracao
                    {
                        NoExpressao getNumeroLinhas();
                        NoExpressao getNumeroColunas();
                    };

                    //==========================================================================================//

                    interface NoDeclaracaoFuncao : NoDeclaracao
                    {
                        Quantificador getQuantificador();
                        ListaNoBloco getBlocos();
                        ListaNoDeclaracaoParametro getParametros();
                    };

                    //==========================================================================================//

                    interface NoDeclaracaoParametro : No
                    {
                        long getIndice();
                        string getNome();
                        TipoDado getTipoDado();
                        Quantificador getQuantificador();
                        ModoAcesso getModoAcesso();
                        TrechoCodigoFonte getTrechoCodigoFonteNome();
                        TrechoCodigoFonte getTrechoCodigoFonteTipoDado();
                    };

                    //==========================================================================================//

                    interface ArvoreSintaticaAbstrata
                    {
                        ListaNoDeclaracao getListaDeclaracoesGlobais();
                        any aceitar(in VisitanteASA visitante) raises(ExcecaoVisitaASA);
                    };

                    //==========================================================================================//
                        
                    interface ArvoreSintaticaAbstrataPrograma : ArvoreSintaticaAbstrata
                    {
                    
                    };

                    //==========================================================================================//

                    interface VisitanteASA 
                    {    
                        any visitarArvoreSintaticaAbstrataPrograma(in ArvoreSintaticaAbstrataPrograma asap) raises(ExcecaoVisitaASA);
                        any visitarNoCadeia(in NoCadeia noCadeia) raises(ExcecaoVisitaASA);
                        any visitarNoCaracter(in NoCaracter noCaracter) raises(ExcecaoVisitaASA);
                        any visitarNoCaso(in NoCaso noCaso) raises(ExcecaoVisitaASA);
                        any visitarNoChamadaFuncao(in NoChamadaFuncao chamadaFuncao) raises(ExcecaoVisitaASA);
                        any visitarNoDeclaracaoFuncao(in NoDeclaracaoFuncao declaracaoFuncao) raises(ExcecaoVisitaASA);
                        any visitarNoDeclaracaoMatriz(in NoDeclaracaoMatriz noDeclaracaoMatriz) raises(ExcecaoVisitaASA);
                        any visitarNoDeclaracaoVariavel(in NoDeclaracaoVariavel noDeclaracaoVariavel) raises(ExcecaoVisitaASA);
                        any visitarNoDeclaracaoVetor(in NoDeclaracaoVetor noDeclaracaoVetor) raises(ExcecaoVisitaASA);
                        any visitarNoDecremento(in NoDecremento noDecremento) raises(ExcecaoVisitaASA);
                        any visitarNoEnquanto(in NoEnquanto noEnquanto) raises(ExcecaoVisitaASA);
                        any visitarNoEscolha(in NoEscolha noEscolha) raises(ExcecaoVisitaASA);
                        any visitarNoFacaEnquanto(in NoFacaEnquanto noFacaEnquanto) raises(ExcecaoVisitaASA);
                        any visitarNoIncremento(in NoIncremento noIncremento) raises(ExcecaoVisitaASA);
                        any visitarNoInteiro(in NoInteiro noInteiro) raises(ExcecaoVisitaASA);
                        any visitarNoLogico(in NoLogico noLogico) raises(ExcecaoVisitaASA);
                        any visitarNoMatriz(in NoMatriz noMatriz) raises(ExcecaoVisitaASA);
                        any visitarNoMenosUnario(in NoMenosUnario noMenosUnario) raises(ExcecaoVisitaASA);
                        any visitarNoNao(in NoNao noNao) raises(ExcecaoVisitaASA);
                        any visitarNoOperacao(in NoOperacao noOperacao) raises(ExcecaoVisitaASA);
                        any visitarNoPara(in NoPara noPara) raises(ExcecaoVisitaASA);
                        any visitarNoPare(in NoPare noPare) raises(ExcecaoVisitaASA);
                        any visitarNoPercorra(in NoPercorra noPercorra) raises(ExcecaoVisitaASA);
                        any visitarNoReal(in NoReal noReal) raises(ExcecaoVisitaASA);
                        any visitarNoReferenciaMatriz(in NoReferenciaMatriz noReferenciaMatriz) raises(ExcecaoVisitaASA);
                        any visitarNoReferenciaVariavel(in NoReferenciaVariavel noReferenciaVariavel) raises(ExcecaoVisitaASA);
                        any visitarNoReferenciaVetor(in NoReferenciaVetor noReferenciaVetor) raises(ExcecaoVisitaASA);
                        any visitarNoRetorne(in NoRetorne noRetorne) raises(ExcecaoVisitaASA);
                        any visitarNoSe(in NoSe noSe) raises(ExcecaoVisitaASA);
                        any visitarNoVetor(in NoVetor noVetor) raises(ExcecaoVisitaASA);
                        any visitarNoDeclaracaoParametro(in NoDeclaracaoParametro noDeclaracaoParametro) raises(ExcecaoVisitaASA);
                    };
                };

                //==========================================================================================//

                module execucao
                {
                    //==========================================================================================//
                    
                    enum ModoEncerramento { NORMAL, ERRO, INTERRUPCAO };

                    //==========================================================================================//

                    interface Entrada
                    {
                        any ler(in asa::TipoDado tipoDado) raises(Excecao);
                    };

                    //==========================================================================================//

                    interface ObservadorExecucao
                    {
                        void execucaoIniciada(in Programa programa);
                        void execucaoEncerrada(in Programa programa, in ResultadoExecucao resultadoExecucao);
                    };

                    //==========================================================================================//

                    interface ResultadoExecucao
                    {
                        long long getTempoExecucao();
                        ModoEncerramento getModoEncerramento();
                        mensagens::ErroExecucao getErro();
                    };

                    //==========================================================================================//

                    interface Saida
                    {
                        void limpar() raises(Excecao);
                        void escreverCadeia(in string valor) raises(Excecao);
                        void escreverLogico(in boolean valor) raises(Excecao);
                        void escreverInteiro(in long valor) raises(Excecao);
                        void escreverReal(in double valor) raises (Excecao);
                        void escreverCaracter(in char valor) raises (Excecao);
                    };
                };

                //==========================================================================================//

                typedef sequence<string> Parametros;

                exception ErroCompilacao
                {
                    analise::ResultadoAnalise resultadoAnalise;
                };

                //==========================================================================================//

                interface Programa
                {
                    void adicionarObservadorExecucao(in execucao::ObservadorExecucao observador);
                    void removerObservadorExecucao(in execucao::ObservadorExecucao observador);
                    void executar(in Parametros parametros);
                    //void depurar() throws Exception;
                    void interromper();
                    asa::ArvoreSintaticaAbstrataPrograma getArvoreSintaticaAbstrata();
                    void setFuncaoInicial(in string funcaoInicial);
                    string getFuncaoInicial();
                    void setEntrada(in execucao::Entrada entrada);
                    void setSaida(in execucao::Saida saida);
                    string getCodigo();
                    boolean isExecutando();
                };

                //==========================================================================================//

                interface Portugol
                {
                    analise::ResultadoAnalise analisar(in string codigo);
                    Programa compilar(in string codigo) raises(ErroCompilacao);
                    void encerrar();
                };

                //==========================================================================================//
            };
        };
    };
};
